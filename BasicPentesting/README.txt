export IP=10.10.85.42


1) Found exposed services using nmap:

`nmap -v -p - -oN nmap/initial $IP`

	* This command searched all hosts and all ports, but I could have probably refined that search.
	* Found ports:
		- 22/tcp   open  ssh
		- 80/tcp   open  http
		- 139/tcp  open  netbios-ssn
		- 445/tcp  open  microsoft-ds
		- 8009/tcp open  ajp13
		- 8080/tcp open  http-proxy

2) Find the hidden directory on the web server using gobuster:

`gobuster dir -u http://$IP -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt`

	* Found /development
	* Found a message in one of the web server files hinting at an Apache Struts v2.5.12 exploit. See apache_struts_exploit.py file. 

3) Brute-force to find the username. They suggest exploiting SMB and enumerating for usernames.
	* I found an article suggesting the following nmap command using the nmap scripting engine for smb:
`nmap -sC -p 139,445 -sV $IP`
	* Results return the SMB version, which I can then google for an exploit.
	* Reading on, I see that I can just use the built-in tool, smbmap:
`smbmap -H $IP`
	* Nothing. Restricted so trying enum4linux:
`enum4linux -a $IP`
	* Didn't provide enough information.
	* Found a enum4linux cheat sheet: https://highon.coffee/blog/enum4linux-cheat-sheet/. It pointed me to use the command:
`enum4linux -r $IP`
	* After some time, I found two usernames: 'kay' & 'jay'. 'jay' was the answer.

4) Brute-force to find the password. They suggest using hydra (https://tools.kali.org/password-attacks/hydra).
	* Found password, 'armando', using hydra command:
`hydra -l jan -P /usr/share/wordlists/metasploit/unix_passwords.txt -t 8 ssh://$IP`
	* Logged into the SMB via SSH (port 22) using the username, 'jan', and password, 'armando'.
	* Poked around and found ssh information for the user, 'kay', at /home/key/.ssh, but don't really know what to do with it.....

5) Enumerate the machine to find any vectors for privilege escalation.
	* Found linPEAS (https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite).
	* Copied the linpeas.sh into my /usr/share/ directory, ran it, and exported the results to /home/tony/try_hack_me/BasicPentesting/linpeas_report.txt
	* Ended up having to copy the linpeas.sh file over to the SMB server. So I ssh'd into jan using the password, armando, and ran a `scp <source> <destination>` command to copy the file into /tmp/linpeas.sh.
	* After running linpeas on the SMB server, it was discovered that there was a private key found inside /home/kay/.ssh. So I ran another scp to copy those SSH files into my local machine.
	* I tried ssh'ing into the SMB server as 'kay' using the private ssh key, id_rsa, using the command:
`ssh -i id_rsa kay@$IP`
	* But that didn't work because the private key had a passphrase. Gonna try brute forcing the passphrase.
	* Using John the Ripper, I converted the id_rsa private key file to a hash file that John the Ripper could understand with the command:
`python /usr/share/john/ssh2john.py id_rsa > id_rsa.hash`
	* With a hash and a password list (used rockyou.txt), I found the password to be 'beeswax'. Used this john command:
`john --wordlist=/usr/share/wordlists/rockyou.txt id_rsa.hash`
	* Tried ssh'ing again into kay and it worked.

6) What is the final password you obtain?
	* After doing a simple `ls` command in the root directory of kay, I found a file called 'pass.bak'.
	* Running a 'cat' of the file printed out the final password, which was 'heresareallystrongpasswordthatfollowsthepasswordpolicy$$'